package sort;

import java.awt.event.ActionEvent; 
import java.awt.event.ActionListener; 
import javax.swing.JOptionPane; 
import javax.swing.table.DefaultTableModel; 

public class Librarian extends javax.swing.JFrame { 
    private Books[] books; 
    private int numberOfBooks; 
    private int booksAdded = 0; 
    private Books[] previousState; // To store the previous state for undo

    public Librarian() { 
        initComponents(); 
        removeBook(); 
        addBook(); 
        searchBook(); 
        initializeArraySize(); 
        updateTable(); 
        sortBooks(); // Initialize sorting functionality
    } 

    private void initializeArraySize() { 
        numberOfBooks = Integer.parseInt(JOptionPane.showInputDialog(this, "How many books would you like to enter?", "Input Book Quantity", JOptionPane.PLAIN_MESSAGE)); 
        books = new Books[numberOfBooks]; 
    } 

    private void addBook() { 
        btn_Add.addActionListener(new ActionListener() { 
            @Override 
            public void actionPerformed(ActionEvent e) { 
                if (booksAdded < numberOfBooks) { 
                    String title = txt_title.getText(); 
                    String ISBN = txt_ISBN.getText(); 
                    String author = txt_Author.getText(); 
                    String genre = txt_Genre.getText(); 
                    books[booksAdded] = new Books(title, ISBN, author, genre); 
                    booksAdded++; 
                    jLabel2.setText(String.valueOf(booksAdded)); 
                    txt_title.setText(""); 
                    txt_ISBN.setText(""); 
                    txt_Author.setText(""); 
                    txt_Genre.setText(""); 
                    updateTable(); 
                } else { 
                    JOptionPane.showMessageDialog(null, "You've reached the limit of " + numberOfBooks + " books.", "Error: Limit Reached", JOptionPane.WARNING_MESSAGE); 
                } 
            } 
        }); 
    } 

    private void removeBook() { 
        btn_Remove.addActionListener(new ActionListener() { 
            @Override 
            public void actionPerformed(ActionEvent e) { 
                int selectedRow = tbl_displayTable.getSelectedRow(); 
                if (selectedRow >= 0) { 
                    for (int i = selectedRow; i < booksAdded - 1; i++) { 
                        books[i] = books[i + 1]; 
                    } 
                    books[booksAdded - 1] = null; 
                    booksAdded--; 
                    jLabel2.setText(String.valueOf(booksAdded)); 
                    updateTable(); 
                } else { 
                    JOptionPane.showMessageDialog(null, "Please select a book to delete", "Selection Error", JOptionPane.ERROR_MESSAGE); 
                } 
            } 
        }); 
    } 

    private void searchBook() { 
        btn_Search.addActionListener(new ActionListener() { 
            @Override 
            public void actionPerformed(ActionEvent e) { 
                String searchQuery = txt_SearchBar.getText().toLowerCase(); 
                boolean found = false; 
                for (int i = 0; i < booksAdded; i++) { 
                    Books book = books[i]; 
                    if (book.getTitle().toLowerCase().contains(searchQuery) || 
                        book.getISBN().toLowerCase().contains(searchQuery) || 
                        book.getAuthor().toLowerCase().contains(searchQuery) || 
                        book.getGenre().toLowerCase().contains(searchQuery)) { 
                        tbl_displayTable.setRowSelectionInterval(i, i); 
                        found = true; 
                        break; 
                    } 
                } 
                if (!found) { 
                    JOptionPane.showMessageDialog(null, "No match found.", "Search Result", 
                        JOptionPane.INFORMATION_MESSAGE); 
                } 
            } 
        }); 
    } 

    private void updateTable() { 
        DefaultTableModel model = (DefaultTableModel) tbl_displayTable.getModel(); 
        model.setRowCount(0); // Clear existing rows 
        for (int i = 0; i < booksAdded; i++) { 
            Books book = books[i];
            model.addRow(new Object[]{book.getISBN(), book.getTitle(), book.getAuthor(), book.getGenre()}); 
        } 
    } 

    private void bubbleSortByTitle() {
        for (int i = 0; i < booksAdded - 1; i++) {
            for (int j = 0; j < booksAdded - 1 - i; j++) {
                if (books[j].getTitle().compareToIgnoreCase(books[j + 1].getTitle()) > 0) {
                    // Swap
                    Books temp = books[j];
                    books[j] = books[j + 1];
                    books[j + 1] = temp;
                }
            }
        }
        updateTable();
    }

    private void saveState() {
        previousState = new Books[booksAdded];
        System.arraycopy(books, 0, previousState, 0, booksAdded);
    }

    private void undoLastSort() {
        if (previousState != null) {
            books = previousState;
            booksAdded = previousState.length; // Reset booksAdded to the previous state
            updateTable();
            jLabel2.setText(String.valueOf(booksAdded));
        } else {
            JOptionPane.showMessageDialog(null, "No previous state to undo.", "Undo Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void sortBooks() {
        btn_Sort.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                saveState(); // Save current state before sorting
                bubbleSortByTitle();
            }
        });
        
        btn_Undo.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                undoLastSort();
            }
        });
    }

    @SuppressWarnings("unchecked") 
    private void initComponents() { 
        jPanel1 = new javax.swing.JPanel(); 
        lbl_bookTitle = new javax.swing.JLabel(); 
        jScrollPane1 = new javax.swing.JScrollPane(); 
        tbl_displayTable = new javax.swing.JTable(); 
        txt_title = new javax.swing.JTextField(); 
        lbl_ISBN = new javax.swing.JLabel(); 
        txt_ISBN = new javax.swing.JTextField(); 
        lbl_Author = new javax.swing.JLabel(); 
        txt_Author = new javax.swing.JTextField(); 
        lbl_Genre = new javax.swing.JLabel(); 
        txt_Genre = new javax.swing.JTextField(); 
        btn_Add = new javax.swing.JButton(); 
        btn_Remove = new javax.swing.JButton(); 
        btn_Search = new javax.swing.JButton(); 
        btn_Sort = new javax.swing.JButton(); // Declare Sort button
        btn_Undo = new javax.swing.JButton(); // Declare Undo button
        txt_SearchBar = new javax.swing.JTextField(); 
        jPanel2 = new javax.swing.JPanel(); 
        lbl_Title = new javax.swing.JLabel(); 
        jLabel1 = new javax.swing.JLabel(); 
        jLabel2 = new javax.swing.JLabel(); 
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE); 
        setBackground(new java.awt.Color(255, 255, 255)); 
        jPanel1.setBackground(new java.awt.Color(255, 255, 255)); 
        lbl_bookTitle.setFont(new java.awt.Font("Century Gothic", 1, 13)); 
        lbl_bookTitle.setText("Book Title"); 
        tbl_displayTable.setModel(new javax.swing.table.DefaultTableModel( 
            new Object [][] {}, 
            new String [] { 
                "ISBN", "Title", "Author", "Genre" 
            } 
        )); 
        jScrollPane1.setViewportView(tbl_displayTable); 
        lbl_ISBN.setFont(new java.awt.Font("Century Gothic", 1, 13)); 
        lbl_ISBN.setText("ISBN No."); 
        lbl_Author.setFont(new java.awt.Font("Century Gothic", 1, 13)); 
        lbl_Author.setText("Author"); 
        lbl_Genre.setFont(new java.awt.Font("Century Gothic", 1, 13)); 
        lbl_Genre.setText("Genre"); 
        btn_Add.setBackground(new java.awt.Color(222, 177, 0)); 
        btn_Add.setFont(new java.awt.Font("Century Gothic", 0, 12)); 
        btn_Add.setForeground(new java.awt.Color(255, 255, 255)); 
        btn_Add.setText("Add"); 
        btn_Remove.setBackground(new java.awt.Color(153, 0, 0)); 
        btn_Remove.setFont(new java.awt.Font("Century Gothic", 0, 12)); 
        btn_Remove.setForeground(new java.awt.Color(255, 255, 255));
        btn_Remove.setText("Remove"); 
        btn_Search.setFont(new java.awt.Font("Century Gothic", 0, 12)); 
        btn_Search.setText("Search"); 
        btn_Sort.setFont(new java.awt.Font("Century Gothic", 0, 12)); 
        btn_Sort.setText("Sort by Title"); // Sort button label
        btn_Undo.setFont(new java.awt.Font("Century Gothic", 0, 12)); 
        btn_Undo.setText("Undo"); // Undo button label
        jPanel2.setBackground(new java.awt.Color(127, 255, 212)); 
        lbl_Title.setFont(new java.awt.Font("High Tower Text", 1, 32)); 
        lbl_Title.setForeground(new java.awt.Color(255, 255, 255)); 
        lbl_Title.setText("BOOKIT"); 
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2); 
        jPanel2.setLayout(jPanel2Layout); 
        jPanel2Layout.setHorizontalGroup( 
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
            .addGroup(jPanel2Layout.createSequentialGroup() 
                .addGap(68, 68, 68) 
                .addComponent(lbl_Title) 
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)) 
        ); 
        jPanel2Layout.setVerticalGroup( 
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, 
                jPanel2Layout.createSequentialGroup() 
                .addContainerGap(33, Short.MAX_VALUE) 
                .addComponent(lbl_Title) 
                .addGap(20, 20, 20)) 
        ); 
        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 16)); 
        jLabel1.setText("Total number of Books:"); 
        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 16)); 
        jLabel2.setForeground(new java.awt.Color(153, 0, 0)); 
        jLabel2.setText("0"); 
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1); 
        jPanel1.setLayout(jPanel1Layout); 
        jPanel1Layout.setHorizontalGroup( 
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
            .addGroup(jPanel1Layout.createSequentialGroup() 
                .addGap(42, 42, 42) 
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE) 
                    .addGroup(jPanel1Layout.createSequentialGroup() 
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
                            .addComponent(lbl_ISBN) 
                            .addComponent(lbl_bookTitle) 
                            .addComponent(lbl_Author) 
                            .addComponent(lbl_Genre)) 
                        .addGap(36, 36, 36) 
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false) 
                            .addComponent(txt_title) 
                            .addComponent(txt_ISBN) 
                            .addComponent(txt_Author) 
                            .addComponent(txt_Genre, javax.swing.GroupLayout.DEFAULT_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)) 
                        .addGap(0, 0, Short.MAX_VALUE)) 
                    .addGroup(jPanel1Layout.createSequentialGroup() 
                        .addComponent(btn_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE) 
                        .addGap(43, 43, 43) 
                        .addComponent(btn_Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE) 
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) 
                        .addComponent(txt_SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE) 
                        .addGap(18, 18, 18) 
                        .addComponent(btn_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)) 
                    .addGroup(jPanel1Layout.createSequentialGroup() 
                        .addComponent(btn_Sort, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE) // Sort button
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) 
                        .addComponent(btn_Undo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)) // Undo button
                    .addGroup(jPanel1Layout.createSequentialGroup() 
                        .addComponent(jLabel1) 
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED) 
                        .addComponent(jLabel2) 
                        .addGap(0, 0, Short.MAX_VALUE))) 
                .addGap(42, 42, 42)) 
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 
                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) 
        ); 
        jPanel1Layout.setVerticalGroup( 
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
            .addGroup(jPanel1Layout.createSequentialGroup() 
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 
                    javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) 
                .addGap(20, 20, 20) 
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) 
                    .addComponent(lbl_bookTitle) 
                    .addComponent(txt_title, javax.swing.GroupLayout.PREFERRED_SIZE, 
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)) 
                .addGap(20, 20, 20) 
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) 
                    .addComponent(lbl_ISBN) 
                    .addComponent(txt_ISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)) 
                .addGap(20, 20, 20) 
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) 
                    .addComponent(lbl_Author) 
                    .addComponent(txt_Author, javax.swing.GroupLayout.PREFERRED_SIZE, 
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)) 
                .addGap(20, 20, 20) 
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) 
                    .addComponent(lbl_Genre) 
                    .addComponent(txt_Genre, javax.swing.GroupLayout.PREFERRED_SIZE, 
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)) 
                .addGap(29, 29, 29) 
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) 
                    .addComponent(btn_Add) 
                    .addComponent(btn_Remove) 
                    .addComponent(btn_Search) 
                    .addComponent(txt_SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)) 
                .addGap(20, 20, 20) 
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) 
                    .addComponent(btn_Sort) 
                    .addComponent(btn_Undo)) // Sort and Undo buttons
                .addGap(20, 20, 20) 
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE) 
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE) 
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE) 
                    .addComponent(jLabel1) 
                    .addComponent(jLabel2)) 
                .addGap(20, 20, 20)) 
        ); 
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane()); 
        getContentPane().setLayout(layout); 
        layout.setHorizontalGroup( 
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 
                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) 
        ); 
        layout.setVerticalGroup( 
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING) 
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 
                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE) 
        ); 
        pack(); 
    } 

    private javax.swing.JButton btn_Add; 
    private javax.swing.JButton btn_Remove; 
    private javax.swing.JButton btn_Search; 
    private javax.swing.JButton btn_Sort; // Sort button
    private javax.swing.JButton btn_Undo; // Undo button
    private javax.swing.JLabel jLabel1; 
    private javax.swing.JLabel jLabel2; 
    private javax.swing.JPanel jPanel1; 
    private javax.swing.JPanel jPanel2; 
    private javax.swing.JScrollPane jScrollPane1; 
    private javax.swing.JLabel lbl_Author; 
    private javax.swing.JLabel lbl_Genre; 
    private javax.swing.JLabel lbl_ISBN; 
    private javax.swing.JLabel lbl_Title; 
    private javax.swing.JLabel lbl_bookTitle; 
    private javax.swing.JTable tbl_displayTable; 
    private javax.swing.JTextField txt_Author; 
    private javax.swing.JTextField txt_Genre; 
    private javax.swing.JTextField txt_ISBN; 
    private javax.swing.JTextField txt_SearchBar; 
    private javax.swing.JTextField txt_title; 

    public static void main(String[] args) { 
        try { 
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName()); 
        } catch (Exception e) { 
            e.printStackTrace(); 
        } 
        java.awt.EventQueue.invokeLater(new Runnable() { 
            public void run() { 
                new Librarian().setVisible(true); 
            } 
        }); 
    } 
}
